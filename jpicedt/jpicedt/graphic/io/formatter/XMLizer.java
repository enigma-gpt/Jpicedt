// XMLizer.java --- -*- coding: iso-8859-1 -*-
// Copyright 2009/2013 Vincent Belaïche
//
// Author: Vincent Belaïche <vincentb1@users.sourceforge.net>
// Version: $Id: XMLizer.java,v 1.3 2013/03/27 07:04:24 vincentb1 Exp $
// Keywords:
// X-URL: http://www.jpicedt.org/
//
// Ce logiciel est régi par la licence CeCILL soumise au droit français et respectant les principes de
// diffusion des logiciels libres. Vous pouvez utiliser, modifier et/ou redistribuer ce programme sous les
// conditions de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA sur le site
// "http://www.cecill.info".
//
// En contrepartie de l'accessibilité au code source et des droits de copie, de modification et de
// redistribution accordés par cette licence, il n'est offert aux utilisateurs qu'une garantie limitée.  Pour
// les mêmes raisons, seule une responsabilité restreinte pèse sur l'auteur du programme, le titulaire des
// droits patrimoniaux et les concédants successifs.
//
// À cet égard l'attention de l'utilisateur est attirée sur les risques associés au chargement, à
// l'utilisation, à la modification et/ou au développement et à la reproduction du logiciel par l'utilisateur
// étant donné sa spécificité de logiciel libre, qui peut le rendre complexe à manipuler et qui le réserve
// donc à des développeurs et des professionnels avertis possédant des connaissances informatiques
// approfondies.  Les utilisateurs sont donc invités à charger et tester l'adéquation du logiciel à leurs
// besoins dans des conditions permettant d'assurer la sécurité de leurs systèmes et ou de leurs données et,
// plus généralement, à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
//
// Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris connaissance de la licence
// CeCILL, et que vous en avez accepté les termes.
//
/// Commentary:

// La fonction membre appendXMLized est un copier coller de la fonction
// appendEncoded de JPICTextFormatter.



/// Code:
package jpicedt.graphic.io.formatter;
import java.lang.StringBuffer;
import java.lang.String;
import java.io.IOException;
/**
 * Cette classe permet d'échapper les caractères spéciaux de XML, c'est à dire
 * `&lt;',``&gt;' et `&amp;' respectivement en `&amp;lt;',`&amp;gt;' et
 * `&amp;amp;'.
 *
 *@author <a href="mailto:vincentb1@users.sourceforge.net">Vincent Belaïche</a>
 *@since jPicEdt 1.6
 */
public class XMLizer{

	/**
	 * Encode les caractères speciaux dans text, et ajoute de résultat dans
	 * buf.
	 * @param buf Tampon de destination du résultat de l'encodage
	 * @param text Texte à encoder.
	 *@since jPicEdt 1.6
	 */
	public static void appendXMLized(Appendable buf, CharSequence text){
		try
		{
			for (int i=0; i<text.length(); i++){
				char c = text.charAt(i);
				switch (c){
				case '<' : buf.append("&lt;"); break;
				case '>' : buf.append("&gt;"); break;
				case '&' : buf.append("&amp;"); break;
				default : buf.append(c);
				}
			}
		}
		catch(IOException ioEx)
		{
			System.err.println("Error In appendXMLized:");
			ioEx.printStackTrace();
			return;
		}
	}

};


/// XMLizer.java ends here
