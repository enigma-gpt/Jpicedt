// Align_selection.bsh --- -*- coding: iso-8859-1 -*-
// August 7, 2002 - jPicEdt 1.3.2, a picture editor for LaTeX.
// Copyright (C) 1999/2002 Sylvain Reynal
//
// Author: Sylvain Reynal
//         Département de Physique
//         École Nationale Supérieure de l'Électronique et de ses Applications (ÉNSÉA)
//         6, avenue du Ponceau
//         95014 CERGY CEDEX
//         FRANCE
//
//         Tel : +33 130 736 245
//         Fax : +33 130 736 667
//         e-mail : reynal@ensea.fr
//
// Version: $Id: Align_selection.bsh,v 1.2 2011/11/09 06:14:29 vincentb1 Exp $
// Keywords:
// X-URL: http://www.jpicedt.org/
//
// Ce logiciel est régi par la licence CeCILL soumise au droit français et
// respectant les principes de diffusion des logiciels libres. Vous pouvez
// utiliser, modifier et/ou redistribuer ce programme sous les conditions
// de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
// sur le site "http://www.cecill.info".
//
// En contrepartie de l'accessibilité au code source et des droits de copie,
// de modification et de redistribution accordés par cette licence, il n'est
// offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
// seule une responsabilité restreinte pèse sur l'auteur du programme,  le
// titulaire des droits patrimoniaux et les concédants successifs.
//
// A cet égard  l'attention de l'utilisateur est attirée sur les risques
// associés au chargement,  à l'utilisation,  à la modification et/ou au
// développement et à la reproduction du logiciel par l'utilisateur étant
// donné sa spécificité de logiciel libre, qui peut le rendre complexe à
// manipuler et qui le réserve donc à des développeurs et des professionnels
// avertis possédant  des  connaissances  informatiques approfondies.  Les
// utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
// logiciel à leurs besoins dans des conditions permettant d'assurer la
// sécurité de leurs systèmes et ou de leurs données et, plus généralement,
// à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.
//
// Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
// pris connaissance de la licence CeCILL, et que vous en avez accepté les
// termes.
//
/// Commentary:

// This BeanShell script aligns selected elements, either along the 
// topmost, bottommost, leftmost or rightmost side.

/// Code:
import jpicedt.graphic.model.*;
import java.awt.geom.*;

String scriptTitle = "Align selection BSH";

if (canvas()==null) {
	mdimgr.showMessageDialog("First open a board!",scriptTitle,JOptionPane.ERROR_MESSAGE);
	return;
}

selectionHandler = editorkit().getSelectionHandler();

if (selectionHandler.isEmpty()) {
	mdimgr.showMessageDialog("First select objects to be aligned!",scriptTitle,JOptionPane.ERROR_MESSAGE);
	return;
}

// ask user which side to choose for the alignment :
String[] choice = {"Top", "Bottom", "Left", "Right"};
String userChoice = mdimgr.showInputDialog("Choose alignment side",scriptTitle, 
											JOptionPane.INFORMATION_MESSAGE,
											choice,choice[0]);
if (userChoice==null) return; // CANCEL !

// Top = 0 ; Bottom = 1; Left = 2; Right = 3
if (userChoice.equals("Top")) side = 0; 
else if (userChoice.equals("Bottom")) side = 1;
else if (userChoice.equals("Left")) side = 2;
else side = 3;

// for each selected element, fetch the topmost point index (resp. rightmost,...)
switch (side){
	case 0 : alignPt = selectionHandler.getPoint(PicGroup.UM,null).y; break;
	case 1 : alignPt = selectionHandler.getPoint(PicGroup.LM,null).y; break;
	case 2 : alignPt = selectionHandler.getPoint(PicGroup.ML,null).x; break;
	default : alignPt = selectionHandler.getPoint(PicGroup.MR,null).x; break;
}
//mdimgr.showMessageDialog(new Integer(side).toString(),"Info",JOptionPane.ERROR_MESSAGE);

bb = new Rectangle2D.Double();
for (iterator = canvas().selection(); iterator.hasNext();){
	element = iterator.next();
	switch(side){
		case 0 : element.translate(0,alignPt-element.getBoundingBox(bb).getMaxY());
			 break;
		case 1 : element.translate(0,alignPt-element.getBoundingBox(bb).getMinY());
			 break;
		case 2 : element.translate(alignPt-element.getBoundingBox(bb).getMinX(),0);
			 break;
		default : element.translate(alignPt-element.getBoundingBox(bb).getMaxX(),0);
			  break;
	}
	
}

	
