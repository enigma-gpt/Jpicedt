/*
 Plot_function.bsh - August 29, 2002 - jPicEdt 1.3.2, a picture editor for LaTeX.
 Copyright (C) 1999-2002 Sylvain Reynal

 Département de Physique
 Ecole Nationale Supérieure de l'Electronique et de ses Applications (ENSEA)
 6, avenue du Ponceau
 F-95014 CERGY CEDEX

 Tel : +33 130 736 245
 Fax : +33 130 736 667
 e-mail : reynal@ensea.fr
 jPicEdt web page : http://www.jpicedt.org/
  
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or any later version.
  
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
  
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

// This BeanShell remove points from a multicurve in a periodic way (aka resampling, hence the name)
// Useful when loading a curve having tons of points from e.g. GNUPlot
//
import jpicedt.graphic.model.*;
import jpicedt.graphic.*;
import jpicedt.widgets.*;

resampleAll(){
scriptTitle="Resample selected Multicurves";

if (canvas()==null) {
        mdimgr.showMessageDialog("First open a board !",scriptTitle,JOptionPane.ERROR_MESSAGE);
        return;
}

result = mdimgr.showInputDialog("Remove one point every [?] points (defaults to 1)",scriptTitle,JOptionPane.QUESTION_MESSAGE);
if (result==null) return;
if (result.length()==0) n=1;
else n = Integer.parseInt(result);
if (n>=0) n=1;

itSel = canvas().selection();
while (itSel.hasNext()){
	curve = itSel.next();
	if (curve instanceof PicMultiCurve){
		//mdimgr.showMessageDialog(curve.toString(),scriptTitle,JOptionPane.WARNING_MESSAGE);
		i=1;
		while(i<curve.getNumberOfSubdivisionPoints()-2){
			curve.removeSubdivisionPoint(i);
			i+=n;
		}
	}
}
}

resampleAll();

